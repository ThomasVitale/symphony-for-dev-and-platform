apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: carvel-package
  title: Carvel Package
  description: Kubernetes-native package to implement a platform capability using Carvel.
  tags:
    - recommended
    - platform-engineering
spec:
  owner: poseidon-team
  type: capability

  parameters:
    - title: Package Information
      required:
        - name
        - description
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:field: EntityNamePicker
          maxLength: 63
        description:
          title: Description
          type: string
          description: Short explanation of what this package is for
          ui:options:
            rows: 5
        category:
          title: Category
          type: string
          description: Capability category
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]

    - title: Package Repository Information
      required:
        - repoUrl
        - repoBranch
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:autofocus: true
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        repoBranch:
          title: Repository Default Branch
          type: string
          default: main

    - title: Deployment Information
      required:
        - workflowEngine
      properties:
        workflowEngine:
          title: Workflow Engine
          type: string
          description: Choose the workflow engine to use for setting up a deployment pipeline
          ui:autofocus: true
          default: githubActions
          enum:
            - githubActions
          enumNames:
            - "GitHub Actions"
  
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./base
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          category: ${{ parameters.category }}
          repoUrl: ${{ parameters.repoUrl | parseRepoUrl }}
    
    - id: fetch-catalog-info
      name: Fetch Catalog Info
      action: fetch:template
      input:
        url: ../../skeletons/catalog-info/
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          repoUrl: ${{ parameters.repoUrl | parseRepoUrl }}
          applicationType: capability
          lifecycle: experimental

    - id: publish
      name: Publish Application Repository
      action: publish:github
      input:
        repoUrl: ${{ parameters.repoUrl }}
        description: ${{ parameters.description }}
        repoVisibility: private
        defaultBranch: ${{ parameters.repoBranch }}
        topics:
          - carvel
          - package-management
          - platform-engineering

    - id: register
      name: Register Catalog Entity
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yml"

  output:
    links:
      - title: Open Application Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Catalog Entity
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
    text:
    - title: More information
      content: |
        **Entity URL:** `${{ steps['publish'].output.remoteUrl }}`

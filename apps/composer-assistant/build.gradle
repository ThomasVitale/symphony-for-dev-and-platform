plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.cyclonedx.bom' version '1.8.2'
}

group = 'io.kadras.music'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springLangchain4jVersion', "0.9.0")
	set('testcontainers.version', "1.19.7")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

	implementation "io.thomasvitale.langchain4j:langchain4j-ollama-spring-boot-starter:${springLangchain4jVersion}"
	implementation "io.thomasvitale.langchain4j:langchain4j-openai-spring-boot-starter:${springLangchain4jVersion}"
	implementation "io.thomasvitale.langchain4j:langchain4j-weaviate-spring-boot-starter:${springLangchain4jVersion}"
	implementation "io.thomasvitale.langchain4j:langchain4j-spring-cloud-bindings:${springLangchain4jVersion}"

	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	testAndDevelopmentOnly 'org.springframework.boot:spring-boot-devtools'

	developmentOnly "io.thomasvitale.langchain4j:langchain4j-spring-boot-docker-compose:${springLangchain4jVersion}"
	testImplementation "io.thomasvitale.langchain4j:langchain4j-spring-boot-testcontainers:${springLangchain4jVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:ollama'
	testImplementation 'org.testcontainers:weaviate'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('cyclonedxBom') {
	outputFormat = "json"
	projectType = "application"
	schemaVersion = "1.5"
}

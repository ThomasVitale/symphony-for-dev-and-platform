---
apiVersion: v1
kind: ConfigMap
metadata:
  name: erlang-distribution-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  # https://grafana.com/grafana/dashboards/11352
  erlang-distribution-dashboard.json.url: "https://github.com/rabbitmq/rabbitmq-server/raw/e57c579d1a71b283469defdd0d6d45313e6d6daf/deps/rabbitmq_prometheus/docker/grafana/dashboards/Erlang-Distribution.json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: erlang-distributions-compare-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  # https://grafana.com/grafana/dashboards/10988
  erlang-distributions-compare-dashboard.json.url: "https://github.com/rabbitmq/rabbitmq-server/raw/e57c579d1a71b283469defdd0d6d45313e6d6daf/deps/rabbitmq_prometheus/docker/grafana/dashboards/Erlang-Distributions-Compare.json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: erlang-memory-allocators-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  # https://grafana.com/grafana/dashboards/11350
  erlang-memory-allocators-dashboard.json.url: "https://github.com/rabbitmq/rabbitmq-server/raw/e57c579d1a71b283469defdd0d6d45313e6d6daf/deps/rabbitmq_prometheus/docker/grafana/dashboards/Erlang-Memory-Allocators.json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-alerts-grafana-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  rabbitmq-alerts-grafana-dashboard.json: |-
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "panel",
          "id": "flant-statusmap-panel",
          "name": "Statusmap",
          "version": "0.4.1"
        },
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.4.5"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "stat",
          "name": "Stat",
          "version": ""
        },
        {
          "type": "panel",
          "id": "table",
          "name": "Table",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "datasource": "${DS_PROMETHEUS}",
            "enable": true,
            "expr": "ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}",
            "hide": true,
            "iconColor": "#1F60C4",
            "limit": 100,
            "name": "RabbitMQ Alerts Annotations",
            "showIn": 0,
            "step": "30s",
            "tags": [],
            "textFormat": "alert name: {{alertname}}, namespace: {{namespace}}, RabbitMQ cluster: {{rabbitmq_cluster}}, severity: {{severity}}",
            "titleFormat": "",
            "type": "tags",
            "useValueForTime": false
          },
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Dashboard showing pending and firing Prometheus alerts for RabbitMQ clusters.",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "id": null,
      "iteration": 1618904615820,
      "links": [],
      "panels": [
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "Number of firing alerts at the end of the defined time range.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [
                {
                  "from": "",
                  "id": 1,
                  "text": "",
                  "to": "",
                  "type": 1
                }
              ],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 6,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "7.4.5",
          "targets": [
            {
              "expr": "count(ALERTS{rulesgroup=\"rabbitmq\", alertstate=\"firing\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"})",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Firing Alerts",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "Number of pending alerts at the end of the defined time range.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [
                {
                  "from": "",
                  "id": 1,
                  "text": "",
                  "to": "",
                  "type": 1
                }
              ],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "orange",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 9,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "7.4.5",
          "targets": [
            {
              "expr": "count(ALERTS{rulesgroup=\"rabbitmq\", alertstate=\"pending\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"})",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Pending Alerts",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "Shows details of pending and firing alerts for the defined time range.\n\nColumn 'Number of Times Alert started' shows how many times a particular alert transitioned from inactive into active (i.e. pending or firing) state for the defined time range.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": null,
                "displayMode": "auto",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Severity"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 514
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "RabbitMQ node"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 423
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Alert Name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 319
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PersistentVolumeClaim"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 241
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Pod"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 222
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 4,
          "options": {
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "7.4.5",
          "repeat": null,
          "repeatDirection": "h",
          "targets": [
            {
              "expr": "changes( ALERTS_FOR_STATE{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}[$__range] ) + 1",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Alert History Details",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "container": true,
                  "endpoint": true,
                  "job": true,
                  "label_app_kubernetes_io_name": true,
                  "phase": true,
                  "rulesgroup": true,
                  "service": true,
                  "statefulset": true
                },
                "indexByName": {
                  "Time": 8,
                  "Value": 7,
                  "alertname": 0,
                  "container": 11,
                  "endpoint": 12,
                  "instance": 3,
                  "job": 9,
                  "label_app_kubernetes_io_name": 13,
                  "namespace": 1,
                  "persistentvolumeclaim": 5,
                  "phase": 14,
                  "pod": 4,
                  "rabbitmq_cluster": 2,
                  "rulesgroup": 10,
                  "service": 15,
                  "severity": 6,
                  "statefulset": 16
                },
                "renameByName": {
                  "Time": "Time of Query",
                  "Value": "Number of Times Alert started",
                  "alertname": "Alert Name",
                  "container": "",
                  "instance": "Instance (scraped endpoint)",
                  "namespace": "Namespace",
                  "persistentvolumeclaim": "PersistentVolumeClaim",
                  "pod": "Pod",
                  "rabbitmq_cluster": "RabbitMQ Cluster",
                  "rabbitmq_node": "RabbitMQ node",
                  "severity": "Severity"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "cards": {
            "cardHSpacing": 2,
            "cardMinWidth": 7,
            "cardRound": 5,
            "cardVSpacing": 2
          },
          "color": {
            "cardColor": "#b4ff00",
            "colorScale": "sqrt",
            "colorScheme": "interpolateGnYlRd",
            "defaultColor": "#757575",
            "exponent": 0.5,
            "mode": "discrete",
            "thresholds": [
              {
                "color": "#F2495C",
                "tooltip": "firing",
                "value": "2"
              },
              {
                "color": "#FF9830",
                "tooltip": "pending",
                "value": "1"
              },
              {
                "color": "#73BF69",
                "tooltip": "no alert",
                "value": "0"
              }
            ]
          },
          "datasource": "${DS_PROMETHEUS}",
          "description": "The optional 'for' clause of a Prometheus alerting rule causes Prometheus to wait for a certain duration between first encountering a new expression output vector element and counting an alert as firing for this element. Elements that are active, but not firing yet, are in the pending state.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "thresholds": {
                "mode": "absolute",
                "steps": []
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "highlightCards": true,
          "id": 2,
          "interval": "1m",
          "legend": {
            "show": true
          },
          "nullPointMode": "as zero",
          "pageSize": 15,
          "pluginVersion": "7.2.1",
          "seriesFilterIndex": -1,
          "statusmap": {
            "ConfigVersion": "v1"
          },
          "targets": [
            {
              "expr": "(max_over_time(ALERTS:rabbitmq_alert_state_discrete{alert_state_numeric=\"1\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}[$__interval]) == 1) * 1",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{alertname}}",
              "refId": "A"
            },
            {
              "expr": "(max_over_time(ALERTS:rabbitmq_alert_state_discrete{alert_state_numeric=\"2\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}[$__interval]) == 1) * 2",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{alertname}}",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Alert History Status Map",
          "tooltip": {
            "extraInfo": "",
            "freezeOnClick": false,
            "items": [],
            "show": true,
            "showExtraInfo": false,
            "showItems": false
          },
          "transformations": [
            {
              "id": "organize",
              "options": {}
            }
          ],
          "type": "flant-statusmap-panel",
          "useMax": true,
          "usingPagination": false,
          "xAxis": {
            "show": true
          },
          "yAxis": {
            "maxWidth": -1,
            "minWidth": -1,
            "show": true
          },
          "yAxisSort": "metrics",
          "yLabel": {
            "delimiter": "",
            "labelTemplate": "",
            "usingSplitLabel": false
          }
        }
      ],
      "refresh": "30s",
      "schemaVersion": 27,
      "style": "dark",
      "tags": [
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\"},namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Namespace",
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\"},namespace)",
              "refId": "Prometheus-namespace-Variable-Query"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\"}, rabbitmq_cluster)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "RabbitMQ Cluster",
            "multi": true,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\"}, rabbitmq_cluster)",
              "refId": "Prometheus-rabbitmq_cluster-Variable-Query"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\"}, severity)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Severity",
            "multi": true,
            "name": "severity",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\"}, severity)",
              "refId": "Prometheus-severity-Variable-Query"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\"}, alertname)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Alert Name",
            "multi": true,
            "name": "alert_name",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\"}, alertname)",
              "refId": "Prometheus-alert_name-Variable-Query"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ]
      },
      "timezone": "",
      "title": "RabbitMQ-Alerts",
      "uid": "jjCq5SLMk",
      "version": 1
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-overview-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  # https://grafana.com/grafana/dashboards/10991
  rabbitmq-overview-dashboard.json.url: "https://github.com/rabbitmq/rabbitmq-server/raw/e57c579d1a71b283469defdd0d6d45313e6d6daf/deps/rabbitmq_prometheus/docker/grafana/dashboards/RabbitMQ-Overview.json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-queue-grafana-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  rabbitmq-queue-grafana-dashboard.json: |-
    {
      "__inputs":[
          {
            "name":"DS_PROMETHEUS",
            "label":"prometheus",
            "description":"",
            "type":"datasource",
            "pluginId":"prometheus",
            "pluginName":"Prometheus"
          }
      ],
      "__elements":{
          
      },
      "__requires":[
          {
            "type":"grafana",
            "id":"grafana",
            "name":"Grafana",
            "version":"8.3.4"
          },
          {
            "type":"datasource",
            "id":"prometheus",
            "name":"Prometheus",
            "version":"1.0.0"
          },
          {
            "type":"panel",
            "id":"timeseries",
            "name":"Time series",
            "version":""
          }
      ],
      "annotations":{
          "list":[
            {
                "builtIn":1,
                "datasource":{
                  "type":"datasource",
                  "uid":"grafana"
                },
                "enable":true,
                "hide":true,
                "iconColor":"rgba(0, 211, 255, 1)",
                "name":"Annotations & Alerts",
                "target":{
                  "limit":100,
                  "matchAny":false,
                  "tags":[
                      
                  ],
                  "type":"dashboard"
                },
                "type":"dashboard"
            }
          ]
      },
      "editable":true,
      "fiscalYearStartMonth":0,
      "graphTooltip":0,
      "id":null,
      "links":[
          
      ],
      "liveNow":false,
      "panels":[
          {
            "datasource":{
                "type":"prometheus",
                "uid":"${DS_PROMETHEUS}"
            },
            "fieldConfig":{
                "defaults":{
                  "color":{
                      "mode":"palette-classic"
                  },
                  "custom":{
                      "axisCenteredZero":false,
                      "axisColorMode":"text",
                      "axisLabel":"Messages",
                      "axisPlacement":"left",
                      "axisSoftMin":0,
                      "barAlignment":0,
                      "drawStyle":"line",
                      "fillOpacity":0,
                      "gradientMode":"none",
                      "hideFrom":{
                        "graph":false,
                        "legend":false,
                        "tooltip":false,
                        "viz":false
                      },
                      "lineInterpolation":"linear",
                      "lineWidth":1,
                      "pointSize":5,
                      "scaleDistribution":{
                        "type":"linear"
                      },
                      "showPoints":"auto",
                      "spanNulls":false,
                      "stacking":{
                        "group":"A",
                        "mode":"none"
                      },
                      "thresholdsStyle":{
                        "mode":"off"
                      }
                  },
                  "mappings":[
                      
                  ],
                  "thresholds":{
                      "mode":"absolute",
                      "steps":[
                        {
                            "color":"green",
                            "value":null
                        },
                        {
                            "color":"red",
                            "value":80
                        }
                      ]
                  }
                },
                "overrides":[
                  {
                      "matcher":{
                        "id":"byName",
                        "options":"Consumers"
                      },
                      "properties":[
                        {
                            "id":"custom.axisPlacement",
                            "value":"right"
                        },
                        {
                            "id":"unit",
                            "value":"prefix:"
                        },
                        {
                            "id":"custom.axisLabel",
                            "value":"Consumers"
                        }
                      ]
                  },
                  {
                      "matcher":{
                        "id":"byName",
                        "options":"Messages"
                      },
                      "properties":[
                        {
                            "id":"custom.drawStyle",
                            "value":"line"
                        },
                        {
                            "id":"custom.fillOpacity",
                            "value":0
                        }
                      ]
                  }
                ]
            },
            "gridPos":{
                "h":20,
                "w":24,
                "x":0,
                "y":0
            },
            "id":2,
            "options":{
                "legend":{
                  "calcs":[
                      
                  ],
                  "displayMode":"list",
                  "placement":"bottom",
                  "showLegend":true
                },
                "tooltip":{
                  "mode":"single",
                  "sort":"none"
                }
            },
            "targets":[
                {
                  "datasource":{
                      "type":"prometheus",
                      "uid":"${DS_PROMETHEUS}"
                  },
                  "editorMode":"code",
                  "expr":"(rabbitmq_detailed_queue_messages{namespace=\"$namespace\", queue=\"$queue\"} * on (instance, job) rabbitmq_identity_info{namespace=\"$namespace\",rabbitmq_cluster=\"$rabbitmq_cluster\"})",
                  "legendFormat":"Messages ({{job}} | {{instance}})",
                  "range":true,
                  "refId":"A"
                },
                {
                  "datasource":{
                      "type":"prometheus",
                      "uid":"${DS_PROMETHEUS}"
                  },
                  "editorMode":"code",
                  "expr":"rabbitmq_detailed_queue_consumers{namespace=\"$namespace\", queue=\"$queue\"} * on (instance, job) rabbitmq_identity_info{namespace=\"$namespace\",rabbitmq_cluster=\"$rabbitmq_cluster\"}",
                  "legendFormat":"Consumers ({{job}} | {{instance}})",
                  "range":true,
                  "refId":"B"
                }
            ],
            "title":"Queue messages and consumers",
            "type":"timeseries"
          }
      ],
      "refresh":"10s",
      "revision":1,
      "schemaVersion":38,
      "style":"dark",
      "tags":[
          "rabbitmq-prometheus"
      ],
      "templating":{
          "list":[
            {
                "current":{
                  "selected":false,
                  "text":"default",
                  "value":"default"
                },
                "hide":2,
                "includeAll":false,
                "label":"datasource",
                "multi":false,
                "name":"DS_PROMETHEUS",
                "options":[
                  
                ],
                "query":"prometheus",
                "refresh":1,
                "regex":"",
                "skipUrlSync":false,
                "type":"datasource",
                "datasource":"${DS_PROMETHEUS}"
            },
            {
                "current":{
                  
                },
                "datasource":{
                  "type":"prometheus",
                  "uid":"${DS_PROMETHEUS}"
                },
                "definition":"label_values(rabbitmq_identity_info, namespace)",
                "hide":0,
                "includeAll":false,
                "label":"Namespace",
                "multi":false,
                "name":"namespace",
                "options":[
                  
                ],
                "query":{
                  "query":"label_values(rabbitmq_identity_info, namespace)",
                  "refId":"StandardVariableQuery"
                },
                "refresh":2,
                "regex":"",
                "skipUrlSync":false,
                "sort":1,
                "tagValuesQuery":"",
                "tagsQuery":"",
                "type":"query",
                "useTags":false
            },
            {
                "current":{
                  
                },
                "datasource":{
                  "type":"prometheus",
                  "uid":"${DS_PROMETHEUS}"
                },
                "definition":"label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
                "hide":0,
                "includeAll":false,
                "label":"RabbitMQ Cluster",
                "multi":false,
                "name":"rabbitmq_cluster",
                "options":[
                  
                ],
                "query":{
                  "query":"label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
                  "refId":"StandardVariableQuery"
                },
                "refresh":2,
                "regex":"",
                "skipUrlSync":false,
                "sort":1,
                "tagValuesQuery":"",
                "tagsQuery":"",
                "type":"query",
                "useTags":false
            },
            {
                "current":{
                  
                },
                "datasource":{
                  "type":"prometheus",
                  "uid":"${DS_PROMETHEUS}"
                },
                "definition":"query_result(rabbitmq_detailed_queue_messages{namespace=\"$namespace\"} * on (instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{namespace=\"$namespace\"})",
                "hide":0,
                "includeAll":false,
                "label":"Queue",
                "multi":false,
                "name":"queue",
                "options":[
                  
                ],
                "query":{
                  "query":"query_result(rabbitmq_detailed_queue_messages{namespace=\"$namespace\"} * on (instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{namespace=\"$namespace\", rabbitmq_cluster=\"$rabbitmq_cluster\"})",
                  "refId":"StandardVariableQuery"
                },
                "refresh":2,
                "regex":"/.*queue=\"([^\"]+)\".*/",
                "skipUrlSync":false,
                "sort":0,
                "tagValuesQuery":"",
                "tagsQuery":"",
                "type":"query",
                "useTags":false
            }
          ]
      },
      "time":{
          "from":"now-15m",
          "to":"now"
      },
      "timepicker":{
          
      },
      "timezone":"",
      "title":"RabbitMQ-Queue",
      "uid":"j9t8vwH7k",
      "version":3,
      "weekStart":""
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-quorum-queues-raft-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  # https://grafana.com/grafana/dashboards/11340
  rabbitmq-quorum-queues-raft-dashboard.json.url: "https://github.com/rabbitmq/rabbitmq-server/raw/e57c579d1a71b283469defdd0d6d45313e6d6daf/deps/rabbitmq_prometheus/docker/grafana/dashboards/RabbitMQ-Quorum-Queues-Raft.json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-stream-dashboard
  namespace: observability-stack
  labels:
    grafana_dashboard: "true"
data:
  # https://grafana.com/grafana/dashboards/14798
  rabbitmq-stream-dashboard.json.url: "https://github.com/rabbitmq/rabbitmq-server/raw/e57c579d1a71b283469defdd0d6d45313e6d6daf/deps/rabbitmq_prometheus/docker/grafana/dashboards/RabbitMQ-Stream.json"
